scale_color_brewer(palette = "BrBG")
topsongs %>% ggplot(aes(x = genre_group, y = energy,
fill = genre_group)) +
geom_boxplot() +
scale_color_brewer(palette = "BrBG")
topsongs %>% ggplot(aes(x = genre_group, y = energy,
fill = genre_group)) +
geom_boxplot() +
scale_color_brewer(palette = "Spectral")
display.brewer.all(colorblindFriendly = TRUE)
topsongs %>% ggplot(aes(x = genre_group, y = energy,
fill = genre_group)) +
geom_boxplot() +
scale_color_brewer(palette = "RdBu")
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
geom_boxplot() +
scale_color_brewer(palette = "RdBu")
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
geom_boxplot(fill = genre_group) +
scale_color_brewer(palette = "RdBu")
?RColorBrewer
?scale_color_brewer
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
geom_boxplot(aes(color = genre_group)) +
scale_color_brewer(palette = "RdBu")
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
geom_boxplot(aes(fill = genre_group)) +
scale_color_brewer(palette = "RdBu")
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
geom_boxplot(aes(fill = genre_group)) +
scale_color_brewer(palette = "Blues")
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
geom_boxplot(aes(fill = genre_group)) +
scale_color_distiller(palette = "Blues")
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
geom_boxplot(aes(fill = genre_group)) +
scale_fill_brewer(palette = "Blues")
display.brewer.all(colorblindFriendly = TRUE)
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
geom_boxplot(aes(fill = genre_group)) +
scale_fill_brewer(palette = "RdBu")
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
geom_boxplot(aes(fill = genre_group)) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
table(topsongs$genre)
table(topsongs$genre_group)
ncol(topsongs)
# Summarize just the numeric data
summary(topsongs[,4:13(topsongs)])
# Summarize just the numeric data
summary(topsongs[,4:13])
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
theme_light() +
geom_boxplot(aes(fill = genre_group)) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_minimal() +
geom_bar() +
scale_fill_brewer(palette = "RdYlGn") +
labs(x = "Genre", y = "Song Count") +
ggtitle("Song Counts by Genre")
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_minimal() +
geom_bar() +
scale_fill_brewer(palette = "RdYlGn") +
labs(x = "Genre", y = "Song Count") +
ggtitle("Song Counts by Genre")
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_minimal() +
geom_bar(aes(fill = genre_group)) +
scale_fill_brewer(palette = "RdYlGn") +
labs(x = "Genre", y = "Song Count") +
ggtitle("Song Counts by Genre")
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_minimal() +
geom_bar(aes(fill = genre_group)) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Song Count") +
ggtitle("Song Counts by Genre")
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
theme_light() +
geom_boxplot(aes(fill = genre_group)) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
# Is there a correlation between energy and bpm?
topsongs %>% ggplot(aes(x = bpm, y = energy)) +
geom_point()
tibble(energy_bpm = cor(topsongs$energy, topsongs$bpm))
cor(topsongs$loudness, topsongs$energy)
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy)) +
geom_point(aes(color = valence)) +
geom_smooth(method = "lm")
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy)) +
geom_point(aes(color = bpm)) +
geom_smooth(method = "lm")
names(topsongs)
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
size = length)) +
geom_point(aes(color = bpm)) +
geom_smooth(method = "lm")
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy)) +
geom_point(aes(color = length)) +
geom_smooth(method = "lm")
display.brewer.all(colorblindFriendly = TRUE)
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy)) +
geom_point(aes(color = length)) +
scale_color_brewer(palette = "YlGnBu")
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy)) +
geom_point(aes(color = length)) +
scale_color_discrete(palette = "YlGnBu")
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy)) +
geom_point(aes(color = length)) +
geom_smooth(method = "lm")
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist, y = energy)) +
geom_point()
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist, y = energy)) +
geom_point() +
coord_flip()
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist)) +
geom_bar() +
coord_flip()
ggplot(aes(x = arrange(desc(artist))) +
# Who had the most hits in the pop genre?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = arrange(desc(artist)))) +
geom_bar() +
coord_flip()
# Who had the most hits in the pop genre?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = arrange(desc(artist)))) +
geom_bar() +
coord_flip()
# Who had the most hits in the pop genre?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist)) +
geom_bar() +
coord_flip()
# Peek at popularity distribution
topsongs %>% ggplot(aes(x = popularity,
color = genre_group)) +
theme_light() +
geom_histogram(col = "black", binwidth = 1) +
labs(x = "Popularity", y = "Song Count") +
ggtitle("Popularity Distribution")
# Peek at popularity distribution
topsongs %>% ggplot(aes(x = popularity)) +
theme_light() +
geom_histogram(fill = genre_group, col = "black", binwidth = 1) +
labs(x = "Popularity", y = "Song Count") +
ggtitle("Popularity Distribution")
# Peek at popularity distribution
topsongs %>% ggplot(aes(x = popularity,
fill = genre_group)) +
theme_light() +
geom_histogram(col = "black", binwidth = 1) +
labs(x = "Popularity", y = "Song Count") +
ggtitle("Popularity Distribution")
# Peek at popularity distribution
topsongs %>% ggplot(aes(x = popularity)) +
theme_light() +
geom_histogram(col = "black", binwidth = 1) +
labs(x = "Popularity", y = "Song Count") +
ggtitle("Popularity Distribution")
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_minimal() +
geom_bar(aes(fill = genre_group)) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Song Count") +
ggtitle("Song Counts by Genre")
save(popdist.plot, "figs/popdist.plt")
save(popdist.plot, "figs/popdist")
getwd()
?save
save(popdist.plot, "figs/popdist.png")
# Peek at popularity distribution
popdist.plot <- topsongs %>% ggplot(aes(x = popularity)) +
theme_light() +
geom_histogram(col = "black", binwidth = 1) +
labs(x = "Popularity", y = "Song Count") +
ggtitle("Popularity Distribution")
save(popdist.plot, "figs/popdist.png")
# Peek at popularity distribution
popdist.plt <- topsongs %>% ggplot(aes(x = popularity)) +
theme_light() +
geom_histogram(col = "black", binwidth = 1) +
labs(x = "Popularity", y = "Song Count") +
ggtitle("Popularity Distribution")
rm(popdist.plot)
save(popdist.plt, "figs/popdist.png")
ggsave("figs/popdist.png")
ggsave("figs/genres.png")
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
theme_light() +
geom_boxplot(aes(fill = genre_group)) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
?ggsave
# Load libraries and data, setup
if(!require(ggplot2)){install.packages("ggplot2")}
if(!require(dplyr)){install.packages("dplyr")}
if(!require(RColorBrewer)){install.packages("RColorBrewer")}
load("rda/top50.rda")
# Convert categoricals to factors
topsongs <- topsongs %>% mutate_at(vars(genre), as.factor)
topsongs <- topsongs %>%
mutate(genre_group = as.factor(case_when(
genre %in% c("atl hip hop", "escape room", "canadian hip hop",
"dfw rap", "country rap") ~ "Hip-Hop",
genre %in% c("brostep", "australian pop", "canadian pop",
"panamanian pop", "boy band", "electropop",
"pop") ~ "Pop",
genre %in% c("latin", "r&b en espanol", "reggaeton",
"reggaeton flow") ~ "Latin",
genre %in% c("dance pop", "pop house", "trap music",
"big room", "edm") ~ "Dance")))
?ggsave
popdist.plt <- topsongs %>% ggplot(aes(x = popularity)) +
theme_light() +
geom_histogram(col = "black", binwidth = 1) +
labs(x = "Popularity", y = "Song Count") +
ggtitle("Popularity Distribution")
ggsave("figs/popdist.png", plot = popdist.plt)
genres.plt <- topsongs %>% ggplot(aes(x = genre_group)) +
theme_minimal() +
geom_bar(aes(fill = genre_group)) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Song Count") +
ggtitle("Song Counts by Genre")
ggsave("figs/genres.png", plot = genres.plt)
# Who had the most hits in each genre?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist)) +
geom_bar() +
coord_flip()
# Who had the most hits in each genre?
topsongs %>%
ggplot(aes(x = artist)) +
geom_bar() +
coord_flip() +
facet_wrap(~ genre_group)
# Who had the most hits in each genre?
topsongs %>%
ggplot(aes(x = artist)) +
geom_bar() +
coord_flip() +
facet_wrap(genre_group ~)
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") +
ggplot(aes(x = artist)) +
geom_bar() +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist)) +
geom_bar() +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
arrange(desc(n())) %>%
ggplot(aes(x = artist)) +
geom_bar() +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(reorder(x = artist, count))) +
geom_bar() +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(reorder(x = artist))) +
geom_bar() +
coord_flip()
?reorder
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = reorder(artist, count))) +
geom_bar() +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = reorder(artist, n()))) +
geom_bar() +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = reorder(artist))) +
geom_bar() +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist)) +
geom_bar() +
coord_flip()
topsongs %>% filter(genre_group == "Pop") %>%
count()
topsongs %>% filter(genre_group == "Pop") %>%
summarize(n())
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>%
count()
group_by(artist) %>%
count() %>%
arrange(desc(n))
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>%
count() %>%
arrange(desc(n()))
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>%
count() %>%
arrange(desc(n))
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>%
count() %>%
arrange(desc(n)) %>%
ggplot(aes(x = artist)) +
geom_bar() +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist)) +
geom_bar() +
coord_flip()
?reorder
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = reorder(artist, -count))) +
geom_bar() +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = reorder(artist, count))) +
geom_bar() +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = reorder(artist, count))) +
geom_bar(stat = "identity") +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist)) +
geom_bar(stat = "identity") +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist)) +
geom_bar() +
coord_flip()
# Is there a correlation between energy and bpm?
topsongs %>% ggplot(aes(x = bpm, y = energy)) +
geom_point()
tibble(energy_bpm = cor(topsongs$energy, topsongs$bpm))
cor(topsongs$loudness, topsongs$energy)
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy)) +
geom_point(aes(color = length)) +
geom_smooth(method = "lm")
# Danceability and energy?
topsongs %>% ggplot(aes(x = danceability, y = energy)) +
geom_point()
# Acousticness and energy?
topsongs %>% ggplot(aes(x = acousticness, y = energy)) +
geom_point()
cor(topsongs$acousticness, topsongs$energy)
# Danceability and energy?
topsongs %>% ggplot(aes(x = danceability, y = energy)) +
geom_point()
cor(topsongs$danceability, topsongs$energy)
View(genres.plt)
View(popdist.plt)
# Explore distributions
topsongs %>% ggplot(aes(x = liveness)) +
geom_histogram(col = "black", binwidth = 5)
topsongs %>% ggplot(aes(x = acousticness)) +
geom_histogram(col = "black", binwidth = 5)
# Is there a correlation between energy and bpm?
topsongs %>% ggplot(aes(x = bpm, y = energy)) +
geom_point()
cor(topsongs$bpm, topsongs$energy)
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy)) +
geom_point(aes(color = bpm)) +
geom_smooth(method = "lm")
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
size = bpm)) +
geom_point() +
geom_smooth(method = "lm")
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
size = bpm, color = genre_group)) +
geom_point() +
geom_smooth(method = "lm")
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
size = bpm)) +
geom_point() +
geom_smooth(method = "lm")
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
size = bpm)) +
geom_point(aes(color = genre_group)) +
geom_smooth(method = "lm")
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
size = bpm)) +
geom_point(aes(color = genre_group)) +
scale_color_brewer(palette = "RdBu") +
geom_smooth(method = "lm")
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
size = bpm)) +
geom_point(aes(color = genre_group)) +
scale_color_brewer(palette = "RdBu") +
geom_smooth(method = "lm") +
labs(x = "Loudness", y = "Energy") +
ggtitle("Energy vs Loudness")
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
size = bpm)) +
theme_light() +
geom_point(aes(color = genre_group)) +
scale_color_brewer(palette = "RdBu") +
geom_smooth(method = "lm") +
labs(x = "Loudness", y = "Energy") +
ggtitle("Energy vs Loudness")
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
size = bpm)) +
theme_light() +
geom_point(aes(color = genre_group), alpha = 0.5) +
scale_color_brewer(palette = "RdBu") +
geom_smooth(method = "lm") +
labs(x = "Loudness", y = "Energy") +
ggtitle("Energy vs Loudness")
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
size = bpm)) +
theme_light() +
geom_point(aes(color = genre_group), alpha = 0.2) +
scale_color_brewer(palette = "RdBu") +
geom_smooth(method = "lm") +
labs(x = "Loudness", y = "Energy") +
ggtitle("Energy vs Loudness")
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
size = bpm)) +
theme_light() +
geom_point(aes(color = genre_group), alpha = 0.7) +
scale_color_brewer(palette = "RdBu") +
geom_smooth(method = "lm") +
labs(x = "Loudness", y = "Energy") +
ggtitle("Energy vs Loudness")
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
size = bpm)) +
theme_light() +
geom_point(aes(color = genre_group), alpha = 0.6) +
scale_color_brewer(palette = "RdBu") +
geom_smooth(method = "lm") +
labs(x = "Loudness", y = "Energy") +
ggtitle("Energy vs Loudness")
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
theme_light() +
geom_boxplot(aes(fill = genre_group)) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
topsongs %>% ggplot(aes(x = genre_group, y = loudness)) +
theme_light() +
geom_boxplot(aes(fill = genre_group)) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
theme_light() +
geom_boxplot(aes(fill = genre_group)) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
topsongs %>% ggplot(aes(x = genre_group)) +
geom_density()
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
geom_density()
topsongs %>% ggplot(aes(x = genre_group, y = loudness)) +
geom_density()
cor(topsongs$bpm, topsongs$energy)
# Is there a correlation between energy and bpm?
topsongs %>% ggplot(aes(x = bpm, y = energy)) +
geom_point()
