res <- vtr[i] + 1 == vtr[i + 1]
}
return(res)
}
sapply(vtr, is.seq)
apply(vtr, is.seq)
sapply(vtr, is.seq)
is.seq <- function(i){
if(i != length(vtr)){
res <- vtr[i] + 1 == vtr[i + 1]
}
return(res)
}
sapply(vtr, is.seq)
vtr[sapply(vtr, is.seq)]
rm(list=ls())
source('~/projects/cribbage/model.R', echo=TRUE)
hand
source('~/projects/spotify2019/wrangle_data.R', echo=TRUE)
class(topsongs)
?read_csv
head(topsongs, 10)
source('~/projects/spotify2019/wrangle_data.R', echo=TRUE)
library(ggplot2)
library(dplyr)
load("rda/top50.rda")
head(topsongs)
head(topsongs$track_name)
# What are the top 10 most popular songs?
topsongs %>% arrange(desc(popularity)) %>%
select(track_name, artist)
# What are the top 10 most popular songs?
top10 <- topsongs %>% arrange(desc(popularity)) %>%
select(track_name, artist)
?slice
topsongs %>% arrange(desc(popularity)) %>%
select(track_name, artist) %>%
slice(1:10)
# What are the top 10 most popular songs?
top10 <- topsongs %>% arrange(desc(popularity)) %>%
select(track_name, artist) %>%
slice(1:10)
# What are the top 10 most popular songs?
top10 <- topsongs %>% arrange(desc(popularity)) %>%
slice(1:10)
top10
top10 %>% ggplot(aes(x = energy, y = bpm)) +
geom_point()
summary(topsongs)
summary(topsongs[,4:ncol(topsongs)])
# Is there a correlation between energy and bpm?
topsongs %>% ggplot(aes(x = bpm, y = energy)) +
geom_point()
# Is there a correlation between energy and bpm?
topsongs %>% ggplot(aes(x = bpm, y = energy)) +
geom_point(size = popularity)
names(topsongs)
# Loudness and bpm?
topsongs %>% ggplot(aes(x = bpm, y = loudness)) +
geom_point()
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy)) +
geom_point()
# Danceability and energy?
topsongs %>% ggplot(aes(x = danceability, y = energy)) +
geom_point()
# Acousticness and energy?
topsongs %>% ggplot(aes(x = acousticness, y = energy)) +
geom_point()
# Energy and popularity?
topsongs %>% ggplot(aes(x = popularity, y = energy)) +
geom_point()
# Summarize just the numeric data
summary(topsongs[,4:ncol(topsongs)])
# Explore distributions
topsongs %>% ggplot(aes(x = liveness)) +
geom_histogram(col = "black")
# Explore distributions
topsongs %>% ggplot(aes(x = liveness)) +
geom_histogram(col = "black", binwidth = 10)
# Explore distributions
topsongs %>% ggplot(aes(x = liveness)) +
geom_histogram(col = "black", binwidth = 12)
# Explore distributions
topsongs %>% ggplot(aes(x = liveness)) +
geom_histogram(col = "black", binwidth = 2)
topsongs %>% ggplot(aes(x = acousticness)) +
geom_histogram(col = "black")
topsongs %>% ggplot(aes(x = acousticness)) +
geom_histogram(col = "black", binwidth = 2)
topsongs %>% ggplot(aes(x = acousticness)) +
geom_histogram(col = "black", binwidth = 5)
topsongs %>% ggplot(aes(x = acousticness)) +
geom_histogram(col = "black", binwidth = 2)
# Is there a correlation between energy and bpm?
topsongs %>% ggplot(aes(x = bpm, y = energy, size = popularity)) +
geom_point()
rm(top10)
head(topsongs)
topsongs <- topsongs %>% mutate_at(genre, as.factor)
?mutate_at
topsongs <- topsongs %>% mutate_at(genre, as.factor())
topsongs %>% mutate_at(genre, as.factor)
topsongs <- topsongs %>% mutate_at(vars(genre), as.factor)
str(topsongs)
# Summarize just the numeric data
summary(topsongs[,4:ncol(topsongs)])
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy)) +
geom_point()
unique(topsongs$genre)
levels(topsongs$genre)
sum(topsongs$genre == "country rap")
sum(topsongs$genre == "dfw rap")
str_detect(topsongs$genre, "pop")
str_detect(topsongs$genre, "rap|hip")
ind <- str_detect(topsongs$genre, "rap|hip")
topsongs[ind,]
topsongs$genre[ind,]
topsongs$genre[ind]
ind <- str_detect(topsongs$genre, "[^t]rap|hip")
topsongs$genre[ind]
ind <- str_detect(topsongs$genre, "[^*a-z]rap|hip")
topsongs$genre[ind]
library(ggplot2)
library(dplyr)
load("rda/top50.rda")
# Convert genre to factor
topsongs <- topsongs %>% mutate_at(vars(genre), as.factor)
head(topsongs)
# What are the top 10 most popular songs?
topsongs %>% arrange(desc(popularity)) %>%
slice(1:10)
# Are songs with higher valence more popular?
topsongs %>% ggplot(aes(x = valence, y = popularity)) +
geom_point()
names(topsongs)
ind <- str_detect(topsongs$genre, "[^*a-z]rap|hip")
topsongs$genre[ind]
# Group subgenres into more general genres
ind <- str_detect(topsongs$genre, "[^*a-z]rap|hip")
library(stringr)
# Group subgenres into more general genres
ind <- str_detect(topsongs$genre, "[^*a-z]rap|hip")
topsongs$genre[ind]
# Group subgenres into more general genres
rap.grp <- str_detect(topsongs$genre, "[^*a-z]rap|hip")
levels(topsongs$genre)
ind <- str_detect(topsongs$genre, "pop")
pop.grp <- topsongs$genre[ind]
pop.grp
ind <- str_detect(topsongs$genre, "latin|reggaeton|rb")
latin.grp <- topsongs$genre[ind]
latin.grp
ind <- str_detect(topsongs$genre, "latin|reggaeton")
latin.grp <- topsongs$genre[ind]
latin.grp
ind <- str_detect(topsongs$genre, "latin|reggaeton|espanol")
latin.grp <- topsongs$genre[ind]
latin.grp
topsongs %>% mutate(genre_group = case_when(
genre %in% hiphop.grp ~ "hip-hop",
genre %in% pop.grp ~ "pop",
genre %in% latin.grp ~ "latin")
))
topsongs %>% mutate(genre_group = case_when(
genre %in% hiphop.grp ~ "hip-hop",
genre %in% pop.grp ~ "pop",
genre %in% latin.grp ~ "latin"))
# Group subgenres into more general genres
ind <- str_detect(topsongs$genre, "[^*a-z]rap|hip")
hiphop.grp <- topsongs$genre[ind]
topsongs %>% mutate(genre_group = case_when(
genre %in% hiphop.grp ~ "hip-hop",
genre %in% pop.grp ~ "pop",
genre %in% latin.grp ~ "latin"))
topsongs %>% mutate(genre_group = as.factor(case_when(
genre %in% hiphop.grp ~ "hip-hop",
genre %in% pop.grp ~ "pop",
genre %in% latin.grp ~ "latin")))
topsongs <- topsongs %>% mutate(genre_group = as.factor(case_when(
genre %in% hiphop.grp ~ "hip-hop",
genre %in% pop.grp ~ "pop",
genre %in% latin.grp ~ "latin")))
topsongs[,c(1, 14)]
topsongs[,c(1, 3, 14)]
levels(topsongs$genre)
ind <- str_detect(topsongs$genre, "trap")
dance.grp <- topsongs$genre[ind]
dance.grp
ind <- str_detect(topsongs$genre, "trap|brostep|big|boy")
dance.grp <- topsongs$genre[ind]
dance.grp
ind <- str_detect(topsongs$genre, "trap|bro|big|boy")
dance.grp <- topsongs$genre[ind]
dance.grp
ind <- str_detect(topsongs$genre, "trap|bro|big|boy|edm")
dance.grp <- topsongs$genre[ind]
dance.grp
topsongs <- topsongs %>% mutate(genre_group = as.factor(case_when(
genre %in% hiphop.grp ~ "hip-hop",
genre %in% pop.grp ~ "pop",
genre %in% latin.grp ~ "latin",
genre %in% dance.grp ~ "dance")))
topsongs
topsongs[,c(1, 3, 14)]
any(is.na(topsongs$genre_group))
sum(is.na(topsongs$genre_group))
topsongs$genre_group[which(is.na(topsongs$genre_group))]
which(is.na(topsongs$genre_group))
topsongs$genre_group[20,]
topsongs$genre_group[20]
levels(topsongs)
levels(topsongs$genre)
topsongs$genre[20]
topsongs[20,]
ind <- str_detect(topsongs$genre, "[^*a-z]rap|hip|room")
hiphop.grp <- topsongs$genre[ind]
ind <- str_detect(topsongs$genre, "pop")
pop.grp <- topsongs$genre[ind]
ind <- str_detect(topsongs$genre, "latin|reggaeton|espanol")
latin.grp <- topsongs$genre[ind]
ind <- str_detect(topsongs$genre, "trap|bro|big|boy|edm")
dance.grp <- topsongs$genre[ind]
topsongs <- topsongs %>% mutate(genre_group = as.factor(case_when(
genre %in% hiphop.grp ~ "hip-hop",
genre %in% pop.grp ~ "pop",
genre %in% latin.grp ~ "latin",
genre %in% dance.grp ~ "dance")))
any(is.na(topsongs$genre_group))
levels(topsongs$genre_group)
rm(ind, hiphop.grp, pop.grp, latin.grp, dance.grp)
rm(rap.grp)
# Danceability and energy?
topsongs %>% ggplot(aes(x = danceability, y = energy)) +
geom_point()
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy)) +
geom_point()
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
color = genre_group)) +
geom_point()
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
color = genre_group,
size = danceability)) +
geom_point()
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
color = genre_group,
size = valence)) +
geom_point()
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
color = genre_group,
size = acousticness)) +
geom_point()
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
color = genre_group,
size = liveness)) +
geom_point()
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
color = genre_group)) +
geom_point()
# Which is the most popular genre?
topsongs %>% ggplot(aes(x = genre_group,
y = popularity)) +
geom_bar()
# Which is the most popular genre?
topsongs %>% ggplot(aes(x = genre_group,
y = popularity)) +
geom_col()
# Which is the most popular genre?
topsongs %>% ggplot(aes(x = genre_group)) +
geom_bar()
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group, color = genre)) +
geom_bar(position = "stack")
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group, fill = genre)) +
geom_bar(position = "stack")
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group, fill = artist)) +
geom_bar(position = "stack")
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group, fill = popularity)) +
geom_bar(position = "stack")
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
geom_bar()
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_dark()
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_get()
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_bw()
geom_bar()
topsongs %>% ggplot(aes(x = genre_group)) +
theme_bw()
geom_bar()
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_dark() +
geom_bar()
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_get() +
geom_bar()
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_minimal() +
geom_bar()
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_minimal() +
geom_bar() +
labs(x = "Genre", y = "Song Count")
ind <- str_detect(topsongs$genre, "[^*a-z]rap|hip|room")
hiphop.grp <- topsongs$genre[ind]
ind <- str_detect(topsongs$genre, "pop")
pop.grp <- topsongs$genre[ind]
ind <- str_detect(topsongs$genre, "latin|reggaeton|espanol")
latin.grp <- topsongs$genre[ind]
ind <- str_detect(topsongs$genre, "trap|bro|big|boy|edm")
dance.grp <- topsongs$genre[ind]
topsongs <- topsongs %>% mutate(genre_group = as.factor(case_when(
genre %in% hiphop.grp ~ "Hip-Hop",
genre %in% pop.grp ~ "Pop",
genre %in% latin.grp ~ "Latin",
genre %in% dance.grp ~ "Dance")))
rm(ind, hiphop.grp, pop.grp, latin.grp, dance.grp)
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_minimal() +
geom_bar() +
labs(x = "Genre", y = "Song Count")
# Explore distributions
topsongs %>% ggplot(aes(x = liveness)) +
geom_histogram(col = "black", binwidth = 2)
topsongs %>% ggplot(aes(x = acousticness)) +
geom_histogram(col = "black", binwidth = 2)
# Explore distributions
topsongs %>% ggplot(aes(x = liveness)) +
geom_histogram(col = "black", binwidth = 2)
# Explore distributions
topsongs %>% ggplot(aes(x = liveness)) +
geom_histogram(col = "black", binwidth = 5)
topsongs %>% ggplot(aes(x = acousticness)) +
geom_histogram(col = "black", binwidth = 5)
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_minimal() +
geom_bar() +
labs(x = "Genre", y = "Song Count")
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_minimal() +
geom_bar(fill = "blue") +
labs(x = "Genre", y = "Song Count")
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_minimal() +
geom_bar(fill = "red") +
labs(x = "Genre", y = "Song Count")
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_minimal() +
geom_bar(col = "black", fill = "red") +
labs(x = "Genre", y = "Song Count")
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_minimal() +
geom_bar(fill = "red") +
labs(x = "Genre", y = "Song Count")
# Explore distributions
topsongs %>% ggplot(aes(x = liveness, fill = genre_group)) +
geom_histogram(col = "black", binwidth = 5)
# Explore distributions
topsongs %>% ggplot(aes(x = liveness, fill = genre_group)) +
geom_histogram(col = "black", binwidth = 5)
# Explore distributions
topsongs %>% ggplot(aes(x = liveness)) +
geom_histogram(col = "black", binwidth = 5)
getwd()
topsongs[,c(1,2,14)]
?str_detect
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_minimal() +
geom_bar(fill = "red") +
labs(x = "Genre", y = "Song Count") +
ggtitle("Song Counts by Genre")
# Summarize just the numeric data
summary(topsongs[,4:ncol(topsongs)])
# Group subgenres into more general genres
ind <- str_detect(topsongs$genre, "[^*a-z]rap|hip|oom")
hiphop.grp <- topsongs$genre[ind]
hiphop.grp
# Group subgenres into more general genres
ind <- str_detect(topsongs$genre, "[^*a-z]rap|hi|oom")
hiphop.grp <- topsongs$genre[ind]
hiphop.grp
# Group subgenres into more general genres
ind <- str_detect(topsongs$genre, "[^*a-z]rap|hip|room")
hiphop.grp <- topsongs$genre[ind]
hiphop.grp
ind <- str_detect(topsongs$genre, coll("pop"))
pop.grp <- topsongs$genre[ind]
pop.grp
ind <- str_detect(topsongs$genre, fixed("pop"))
pop.grp <- topsongs$genre[ind]
pop.grp
levels(topsongs$genre)
topsongs[which(topsongs$genre == "brostep"),]
topsongs[which(topsongs$genre == "brostep"),1:2]
rm(list=ls())
library(ggplot2)
library(dplyr)
load("rda/top50.rda")
topsongs <- topsongs %>% mutate_at(vars(genre), as.factor)
topsongs <- topsongs %>%
mutate(genre_group = as.factor(case_when(
genre %in% c("atl hip hop", "escape room", "canadian hip hop",
"dfw rap", "country rap") ~ "Hip-Hop",
genre %in% c("brostep", "australian pop", "canadian pop",
"panamanian pop", "boy band", "electropop",
"pop") ~ "Pop",
genre %in% c("latin", "r&b en espanol", "reggaeton",
"reggaeton flow") ~ "Latin",
genre %in% c("dance pop", "pop house", "trap music",
"big room", "edm") ~ "Dance")))
any(is.na(topsongs$genre_group))
# Which is the most common genre of the top 50?
topsongs %>% ggplot(aes(x = genre_group)) +
theme_minimal() +
geom_bar(fill = "red") +
labs(x = "Genre", y = "Song Count") +
ggtitle("Song Counts by Genre")
# Summarize just the numeric data
summary(topsongs[,4:ncol(topsongs)])
# What are the top 10 most popular songs?
topsongs %>% arrange(desc(popularity)) %>%
select(track_name, artist, genre_group) %>%
slice(1:10)
# Are songs with higher valence more popular?
topsongs %>% ggplot(aes(x = valence, y = popularity)) +
geom_point()
# Is there a correlation between energy and bpm?
topsongs %>% ggplot(aes(x = popularity, y = energy)) +
geom_point()
# Is there a correlation between energy and bpm?
topsongs %>% ggplot(aes(x = bpm, y = energy)) +
geom_point()
# What are the top 10 most popular songs?
top10 <- topsongs %>% arrange(desc(popularity)) %>%
select(track_name, artist, genre_group) %>%
slice(1:10)
top10 %>% ggplot(aes(x = track_name, y = popularity)) +
geom_boxplot()
# What are the top 10 most popular songs?
top10 <- topsongs %>% arrange(desc(popularity)) %>%
slice(1:10)
top10 %>% ggplot(aes(x = track_name, y = popularity)) +
geom_boxplot()
# Are songs with higher valence more popular?
topsongs %>% ggplot(aes(x = valence, y = popularity)) +
geom_col()
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
color = genre_group)) +
geom_point()
# Danceability and energy?
topsongs %>% ggplot(aes(x = danceability, y = energy)) +
geom_point()
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
color = genre_group)) +
geom_point()
# Which artists produce the highest energy tracks?
topsongs %>% arrange(desc(energy))
# Which artists produce the highest energy tracks?
topsongs %>% arrange(desc(energy)) %>%
max()
# Which artists produce the highest energy tracks?
topsongs %>% arrange(desc(energy)) %>%
max(energy)
# Summarize just the numeric data
str(topsongs)
library(ggplot2)
library(dplyr)
load("rda/top50.rda")
topsongs <- topsongs %>% mutate_at(vars(genre), as.factor)
# Group subgenres into more general genres
topsongs <- topsongs %>%
mutate(genre_group = as.factor(case_when(
genre %in% c("atl hip hop", "escape room", "canadian hip hop",
"dfw rap", "country rap") ~ "Hip-Hop",
genre %in% c("brostep", "australian pop", "canadian pop",
"panamanian pop", "boy band", "electropop",
"pop") ~ "Pop",
genre %in% c("latin", "r&b en espanol", "reggaeton",
"reggaeton flow") ~ "Latin",
genre %in% c("dance pop", "pop house", "trap music",
"big room", "edm") ~ "Dance")))
# Summarize just the numeric data
str(topsongs)
