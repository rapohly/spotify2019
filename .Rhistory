"pop") ~ "Pop",
genre %in% c("latin", "r&b en espanol", "reggaeton",
"reggaeton flow") ~ "Latin",
genre %in% c("dance pop", "pop house", "trap music",
"big room", "edm") ~ "Dance")))
# Is there a correlation between energy and bpm?
topsongs %>% ggplot(aes(x = bpm, y = energy)) +
geom_point()
cor(topsongs$bpm, topsongs$energy)
# Loudness and energy?
topsongs %>% ggplot(aes(x = loudness, y = energy,
size = bpm)) +
theme_light() +
geom_point(aes(color = genre_group), alpha = 0.6) +
scale_color_brewer(palette = "RdBu") +
geom_smooth(method = "lm") +
labs(x = "Loudness", y = "Energy") +
ggtitle("Energy vs Loudness")
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
theme_light() +
geom_boxplot(aes(fill = genre_group)) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
topsongs %>% ggplot(aes(x = genre_group, y = loudness)) +
geom_density()
# Explore distributions
topsongs %>% ggplot(aes(x = acousticness)) +
geom_histogram(col = "black", binwidth = 5)
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = as.factor(artist))) +
geom_bar() +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = reorder(as.factor(artist)))) +
geom_bar() +
coord_flip()
ggplot(aes(x = (artist)) +
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = (artist))) +
geom_bar() +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = (artist))) +
geom_bar() +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = (artist)), y = ..count..) +
geom_bar() +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = (artist)), y = reorder(..count..)) +
geom_bar() +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = (artist)), y = arrange(..count..)) +
geom_bar() +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = (artist)), y = ..count..) +
geom_bar() +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist, y = ..count..)) +
geom_bar() +
coord_flip()
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist, y = ..count..)) +
theme_light() +
geom_bar() +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist, y = sort(..count..))) +
theme_light() +
geom_bar() +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = sort(artist))) +
theme_light() +
geom_bar() +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
?sort
topsongs %>% filter(genre_group == "Pop") %>%
count()
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>%
count()
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>%
count() %>% arrange(n)
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>%
count() %>% arrange(desc(n))
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>%
count() %>% arrange(desc(n)) %>%
ggplot(aes(x = artist)) +
theme_light() +
geom_bar() +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>%
count() %>% arrange(desc(n)) %>%
ggplot(aes(x = artist, y = n)) +
theme_light() +
geom_bar() +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>%
count() %>% arrange(desc(n)) %>%
ggplot(aes(x = artist, y = ..n..)) +
theme_light() +
geom_bar() +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>%
count() %>% arrange(desc(n)) %>%
ggplot(aes(x = artist, y = ..count..)) +
theme_light() +
geom_bar() +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist)) +
theme_light() +
geom_bar() +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist)) +
scale_x_discrete(limits = count) +
theme_light() +
geom_bar() +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist)) +
scale_x_discrete(limits = ..count..) +
theme_light() +
geom_bar() +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist)) +
theme_light() +
geom_bar() +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist, fill = artist)) +
theme_light() +
geom_bar() +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist, fill = popularity)) +
theme_light() +
geom_bar() +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist, fill = valence)) +
theme_light() +
geom_bar() +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist)) +
theme_light() +
geom_bar() +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
?reorder
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist, y = ..count..)) +
theme_light() +
geom_col() +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist, y = count)) +
theme_light() +
geom_col() +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>% summarize(n)
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>% summarize(n())
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>% summarize(count = n())
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>%
summarize(count = arrange(desc(n())))
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>%
summarize(count = n()) %>% arrange(desc(count))
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>% summarize(count = n()) %>%
arrange(desc(count)) %>%
ggplot(aes(x = artist)) +
theme_light() +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>% summarize(count = n()) %>%
arrange(desc(count)) %>%
ggplot(aes(x = artist, y = count)) +
theme_light() +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>% summarize(cnt = n()) %>%
arrange(desc(cnt)) %>%
ggplot(aes(x = artist, y = count)) +
theme_light() +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>% summarize(cnt = n()) %>%
arrange(desc(cnt)) %>%
ggplot(aes(x = artist, y = cnt)) +
theme_light() +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>% summarize(cnt = n()) %>%
arrange(desc(cnt))
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
group_by(artist) %>% summarize(cnt = n()) %>%
ggplot(aes(x = artist, y = sort(cnt))) +
theme_light() +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist)) +
theme_light() +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
# Who had the most hits in pop?
topsongs %>% filter(genre_group == "Pop") %>%
ggplot(aes(x = artist)) +
theme_light() +
geom_bar() +
coord_flip() +
labs(x = "Artist", y = "Song Count") +
ggtitle("No. Pop Songs Written by Artist")
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
theme_light() +
geom_boxplot(aes(fill = genre_group)) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
theme_light() +
geom_density(aes(fill = genre_group)) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
theme_light() +
geom_density() +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
?geom_density
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
theme_light() +
geom_density(stat = "density") +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
theme_light() +
stat_density() +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
theme_light() +
stat_density() +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
theme_light() +
geom_boxplot(aes(fill = genre_group)) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
theme_light() +
stat_density() +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
topsongs %>% ggplot(aes(x = energy)) +
theme_light() +
geom_density() +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
topsongs %>% ggplot(aes(x = energy, fill = genre_group)) +
theme_light() +
geom_density() +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
topsongs %>% ggplot(aes(x = energy, fill = genre_group)) +
theme_light() +
geom_density(alpha = 0.5) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
topsongs %>% ggplot(aes(x = energy, fill = genre_group)) +
theme_light() +
geom_density(alpha = 0.5, position = "stack") +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
topsongs %>% ggplot(aes(x = energy, fill = genre_group)) +
theme_light() +
geom_density(alpha = 0.5, position = "stack") +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre (Density)")
topsongs %>% ggplot(aes(x = energy, fill = genre_group)) +
theme_light() +
geom_density(position = "stack") +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre (Density)")
topsongs %>% ggplot(aes(x = energy, fill = genre_group)) +
theme_light() +
geom_density(alpha = 0.5) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre (Density)")
topsongs %>% ggplot(aes(x = energy, fill = genre_group)) +
theme_light() +
geom_density(alpha = 0.2) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre (Density)")
topsongs %>% ggplot(aes(x = energy, fill = genre_group)) +
theme_light() +
geom_density(alpha = 0.6) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre (Density)")
topsongs %>% ggplot(aes(x = energy, fill = genre_group)) +
theme_light() +
geom_density(alpha = 0.7) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre (Density)")
topsongs %>% ggplot(aes(x = energy, fill = genre_group)) +
theme_light() +
geom_density(alpha = 0.6) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre (Density)")
topsongs %>% ggplot(aes(x = energy, fill = genre_group)) +
theme_light() +
geom_density(alpha = 0.4) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre (Density)")
if(!require(gridExtra)){install.packages("gridExtra")}
energybox.plt <- topsongs %>% ggplot(aes(x = genre_group, y = energy)) +
theme_light() +
geom_boxplot(aes(fill = genre_group)) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre")
energydens.plt <- topsongs %>% ggplot(aes(x = energy, fill = genre_group)) +
theme_light() +
geom_density(alpha = 0.4) +
scale_fill_brewer(palette = "RdBu") +
labs(x = "Genre", y = "Energy") +
ggtitle("Energy by Genre (Density)")
grid.arrange(energybox.plt, energydens.plt)
grid.arrange(energybox.plt, energydens.plt)
?grid.arrange
grid.arrange(energybox.plt, energydens.plt, ncol = 2)
?ggsave
getwd()
ggsave("energybox.png", plot = energybox.plt)
ggsave("figs/energybox.png", plot = energybox.plt)
ggsave("figs/energydens.png", plot = energydens.plt)
topsongs %>% ggplot(aes(x = speechiness, fill = genre_group)) +
geom_density()
topsongs %>% ggplot(aes(x = speechiness, fill = genre_group)) +
geom_density(alpha = 0.4)
topsongs %>% group_by(genre_group) %>%
summarize(mean(speechiness))
# Plot energy with bpm stratified by genre
?grid.arrange
grid.arrange(energybox.plt, energydens.plt, ncol = 2, widths = c(2, 2))
grid.arrange(energybox.plt, energydens.plt, ncol = 2, widths = c(5, 5))
names(topsongs)
# Plot energy with bpm stratified by genre
topsongs %>% ggplot(aes(x = energy, y = bpm,
color = genre_group)) +
geom_point()
# Plot energy with bpm stratified by genre
topsongs %>% ggplot(aes(x = bpm, y = energy,
color = genre_group)) +
geom_point()
cor(topsongs$loudness, topsongs$energy)
topsongs %>% group_by(genre_group) %>%
summarize(mean(speechiness))
topsongs %>% group_by(genre_group) %>%
summarize(mean = mean(speechiness)) %>%
arrange(desc(mean))
# Acousticness and energy?
topsongs %>% ggplot(aes(x = acousticness, y = energy)) +
geom_point()
# Explore correlations
scatter.plt <- topsongs %>% ggplot(aes(x = loudness, y = energy,
size = bpm)) +
theme_light() +
geom_point(aes(color = genre_group), alpha = 0.6) +
scale_color_brewer(palette = "RdBu") +
geom_smooth(method = "lm") +
labs(x = "Loudness", y = "Energy") +
ggtitle("Energy vs Loudness")
# Explore correlations
scatter.plt <- topsongs %>% ggplot(aes(x = loudness, y = energy,
size = bpm)) +
theme_light() +
geom_point(aes(color = genre_group), alpha = 0.6) +
scale_color_brewer(palette = "RdBu") +
geom_smooth(method = "lm") +
labs(x = "Loudness", y = "Energy") +
ggtitle("Energy vs Loudness")
scatter.plt
# Explore correlations
scatter.plt <- topsongs %>% ggplot(aes(x = loudness, y = energy,
size = bpm)) +
theme_light() +
geom_point(aes(color = genre_group), alpha = 0.8) +
scale_color_brewer(palette = "RdBu") +
geom_smooth(method = "lm") +
labs(x = "Loudness", y = "Energy") +
ggtitle("Energy vs Loudness")
scatter.plt
